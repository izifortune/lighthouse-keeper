{"version":3,"sources":["webpack:///./node_modules/ramda/es/internal/_isPlaceholder.js","webpack:///./node_modules/ramda/es/internal/_curry1.js","webpack:///./node_modules/ramda/es/always.js","webpack:///./node_modules/ramda/es/__.js","webpack:///./node_modules/ramda/es/internal/_curry2.js","webpack:///./node_modules/ramda/es/add.js","webpack:///./node_modules/ramda/es/internal/_arity.js","webpack:///./node_modules/ramda/es/internal/_curryN.js","webpack:///./node_modules/ramda/es/curryN.js","webpack:///./node_modules/ramda/es/internal/_curry3.js","webpack:///./node_modules/ramda/es/adjust.js","webpack:///./node_modules/ramda/es/internal/_isArray.js","webpack:///./node_modules/ramda/es/internal/_isTransformer.js","webpack:///./node_modules/ramda/es/internal/_dispatchable.js","webpack:///./node_modules/ramda/es/internal/_xfBase.js","webpack:///./node_modules/ramda/es/max.js","webpack:///./node_modules/ramda/es/internal/_map.js","webpack:///./node_modules/ramda/es/internal/_isString.js","webpack:///./node_modules/ramda/es/internal/_isArrayLike.js","webpack:///./node_modules/ramda/es/internal/_xwrap.js","webpack:///./node_modules/ramda/es/bind.js","webpack:///./node_modules/ramda/es/internal/_reduce.js","webpack:///./node_modules/ramda/es/internal/_xmap.js","webpack:///./node_modules/ramda/es/internal/_has.js","webpack:///./node_modules/ramda/es/internal/_isArguments.js","webpack:///./node_modules/ramda/es/keys.js","webpack:///./node_modules/ramda/es/map.js","webpack:///./node_modules/ramda/es/path.js","webpack:///./node_modules/ramda/es/prop.js","webpack:///./node_modules/ramda/es/pluck.js","webpack:///./node_modules/ramda/es/reduce.js","webpack:///./node_modules/ramda/es/internal/_isInteger.js","webpack:///./node_modules/ramda/es/internal/_isFunction.js","webpack:///./node_modules/ramda/es/internal/_cloneRegExp.js","webpack:///./node_modules/ramda/es/type.js","webpack:///./node_modules/ramda/es/internal/_clone.js","webpack:///./node_modules/ramda/es/internal/_pipe.js","webpack:///./node_modules/ramda/es/internal/_checkForMethod.js","webpack:///./node_modules/ramda/es/slice.js","webpack:///./node_modules/ramda/es/tail.js","webpack:///./node_modules/ramda/es/pipe.js","webpack:///./node_modules/ramda/es/reverse.js","webpack:///./node_modules/ramda/es/compose.js","webpack:///./node_modules/ramda/es/internal/_arrayFromIterator.js","webpack:///./node_modules/ramda/es/internal/_containsWith.js","webpack:///./node_modules/ramda/es/identical.js","webpack:///./node_modules/ramda/es/internal/_equals.js","webpack:///./node_modules/ramda/es/internal/_functionName.js","webpack:///./node_modules/ramda/es/equals.js","webpack:///./node_modules/ramda/es/internal/_indexOf.js","webpack:///./node_modules/ramda/es/internal/_contains.js","webpack:///./node_modules/ramda/es/internal/_quote.js","webpack:///./node_modules/ramda/es/internal/_toISOString.js","webpack:///./node_modules/ramda/es/internal/_complement.js","webpack:///./node_modules/ramda/es/internal/_filter.js","webpack:///./node_modules/ramda/es/internal/_isObject.js","webpack:///./node_modules/ramda/es/internal/_xfilter.js","webpack:///./node_modules/ramda/es/filter.js","webpack:///./node_modules/ramda/es/reject.js","webpack:///./node_modules/ramda/es/toString.js","webpack:///./node_modules/ramda/es/internal/_toString.js","webpack:///./node_modules/ramda/es/converge.js","webpack:///./node_modules/ramda/es/divide.js","webpack:///./node_modules/ramda/es/internal/_xdropLastWhile.js","webpack:///./node_modules/ramda/es/nth.js","webpack:///./node_modules/ramda/es/internal/_identity.js","webpack:///./node_modules/ramda/es/internal/_assign.js","webpack:///./node_modules/ramda/es/internal/_objectAssign.js","webpack:///./node_modules/ramda/es/objOf.js","webpack:///./node_modules/ramda/es/internal/_stepCat.js","webpack:///./node_modules/ramda/es/into.js","webpack:///./node_modules/ramda/es/invoker.js","webpack:///./node_modules/ramda/es/length.js","webpack:///./node_modules/ramda/es/sum.js","webpack:///./node_modules/ramda/es/min.js","webpack:///./node_modules/ramda/es/multiply.js","webpack:///./node_modules/ramda/es/prepend.js","webpack:///./node_modules/ramda/es/split.js","webpack:///./node_modules/ramda/es/test.js","webpack:///./node_modules/ramda/es/internal/_isRegExp.js","webpack:///./node_modules/ramda/es/trim.js","webpack:///./node_modules/ramda/es/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/core-js/modules/es6.function.bind.js","webpack:///./node_modules/core-js/modules/_bind.js"],"names":["_isPlaceholder","a","_curry1","fn","f1","arguments","length","apply","this","_","@@functional/placeholder","_curry2","f2","b","_b","_a","es_add","Number","_arity","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_curryN","received","combined","argsIdx","left","combinedIdx","result","es_curryN","_curry3","f3","c","_c","_isArray","Array","isArray","val","Object","prototype","toString","call","_isTransformer","obj","_dispatchable","methodNames","xf","args","slice","pop","idx","transducer","_xfBase","init","es_max","_map","functor","len","_isString","x","internal_isArrayLike","nodeType","hasOwnProperty","XWrap","f","acc","_xwrap","es_bind","thisObj","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","_reduce","list","_arrayReduce","reduce","TypeError","_xmap_XMap","XMap","input","internal_xmap","_has","prop","_isArguments_toString","internal_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","es_keys","keys","nIdx","ks","checkArgsLength","es_map","key","es_path","paths","es_prop","p","es_pluck","es_reduce","isInteger","_isFunction","_cloneRegExp","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","es_type","undefined","_clone","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","_pipe","g","_checkForMethod","methodname","es_slice","fromIndex","toIndex","es_tail","Infinity","pipe","es_reverse","split","reverse","join","compose","_arrayFromIterator","push","_containsWith","pred","es_identical","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","match","typeA","equals","constructor","String","name","message","size","entries","concat","values","keysA","extendedStackA","extendedStackB","es_equals","_indexOf","inf","indexOf","_contains","_quote","s","replace","pad","internal_toISOString","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","_filter","_isObject","_xfilter_XFilter","XFilter","es_filter","filterable","es_reject","es_toString","_toString","seen","recur","y","xs","mapPairs","k","sort","test","isNaN","NaN","repr","es_converge","after","fns","context","es_divide","es_nth","offset","charAt","_identity","_assign","assign","target","output","nextKey","es_objOf","_stepCatArray","@@transducer/init","@@transducer/step","@@transducer/result","_stepCatString","_stepCatObject","es_into","_stepCat","es_invoker","arity","method","es_sum","es_min","es_multiply","es_split","es_test","str","ws","trim","__webpack_require__","__webpack_exports__","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","module","runtime","regeneratorRuntime","exports","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","then","object","Context","reset","skipTempReset","prev","sent","_sent","delegate","tryEntries","forEach","resetTryEntry","stop","rootRecord","completion","type","rval","dispatchException","exception","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","err","invoke","resolve","reject","Promise","unwrapped","previousPromise","process","domain","bind","callInvokeWithMethodAndArg","return","info","pushTryEntry","locs","iteratorMethod","window","asyncGeneratorStep","gen","_next","_throw","error","hadRuntime","getOwnPropertyNames","oldRuntime","e","$export","P","aFunction","isObject","arraySlice","factories","Function","that","partArgs","bound","F","construct"],"mappings":"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","file":"6-971bd7dafe5d8f66af9c.js","sourcesContent":["export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default { '@@functional/placeholder': true };","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nexport default add;","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport _curry2 from './internal/_curry2';\nimport _curryN from './internal/_curryN';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray';\nimport _isTransformer from './_isTransformer';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n};\nvar keys = /*#__PURE__*/_curry1(_keys);\nexport default keys;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _map from './internal/_map';\nimport _reduce from './internal/_reduce';\nimport _xmap from './internal/_xmap';\nimport curryN from './curryN';\nimport keys from './keys';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _curry2 from './internal/_curry2';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2';\nimport path from './path';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;","import _curry2 from './internal/_curry2';\nimport map from './map';\nimport prop from './prop';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import _curry3 from './internal/_curry3';\nimport _reduce from './internal/_reduce';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","export default function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _cloneRegExp from './_cloneRegExp';\nimport type from '../type';\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from './_isArray';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from './internal/_checkForMethod';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry1 from './internal/_curry1';\nimport slice from './slice';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _arity from './internal/_arity';\nimport _pipe from './internal/_pipe';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry1 from './internal/_curry1';\nimport _isString from './internal/_isString';\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nexport default reverse;","import pipe from './pipe';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nexport default identical;","import _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf';\n\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _filter from './internal/_filter';\nimport _isObject from './internal/_isObject';\nimport _reduce from './internal/_reduce';\nimport _xfilter from './internal/_xfilter';\nimport keys from './keys';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport filter from './filter';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _curry1 from './internal/_curry1';\nimport _toString from './internal/_toString';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _contains from './_contains';\nimport _map from './_map';\nimport _quote from './_quote';\nimport _toISOString from './_toISOString';\nimport keys from '../keys';\nimport reject from '../reject';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry2 from './internal/_curry2';\nimport _map from './internal/_map';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;","import _curry2 from './internal/_curry2';\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nvar divide = /*#__PURE__*/_curry2(function divide(a, b) {\n  return a / b;\n});\nexport default divide;","import _curry2 from './_curry2';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","export default function _identity(x) {\n  return x;\n}","import _objectAssign from './_objectAssign';\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _has from './_has';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone';\nimport _curry3 from './internal/_curry3';\nimport _isTransformer from './internal/_isTransformer';\nimport _reduce from './internal/_reduce';\nimport _stepCat from './internal/_stepCat';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import _curry1 from './internal/_curry1';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;","import add from './add';\nimport reduce from './reduce';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nvar min = /*#__PURE__*/_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\nexport default min;","import _curry2 from './internal/_curry2';\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nexport default multiply;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;","import invoker from './invoker';\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nexport default split;","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _curry1 from './internal/_curry1';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\nvar trim = /*#__PURE__*/_curry1(_trim);\nexport default trim;","export { default as F } from './F';\nexport { default as T } from './T';\nexport { default as __ } from './__';\nexport { default as add } from './add';\nexport { default as addIndex } from './addIndex';\nexport { default as adjust } from './adjust';\nexport { default as all } from './all';\nexport { default as allPass } from './allPass';\nexport { default as always } from './always';\nexport { default as and } from './and';\nexport { default as any } from './any';\nexport { default as anyPass } from './anyPass';\nexport { default as ap } from './ap';\nexport { default as aperture } from './aperture';\nexport { default as append } from './append';\nexport { default as apply } from './apply';\nexport { default as applySpec } from './applySpec';\nexport { default as applyTo } from './applyTo';\nexport { default as ascend } from './ascend';\nexport { default as assoc } from './assoc';\nexport { default as assocPath } from './assocPath';\nexport { default as binary } from './binary';\nexport { default as bind } from './bind';\nexport { default as both } from './both';\nexport { default as call } from './call';\nexport { default as chain } from './chain';\nexport { default as clamp } from './clamp';\nexport { default as clone } from './clone';\nexport { default as comparator } from './comparator';\nexport { default as complement } from './complement';\nexport { default as compose } from './compose';\nexport { default as composeK } from './composeK';\nexport { default as composeP } from './composeP';\nexport { default as concat } from './concat';\nexport { default as cond } from './cond';\nexport { default as construct } from './construct';\nexport { default as constructN } from './constructN';\nexport { default as contains } from './contains';\nexport { default as converge } from './converge';\nexport { default as countBy } from './countBy';\nexport { default as curry } from './curry';\nexport { default as curryN } from './curryN';\nexport { default as dec } from './dec';\nexport { default as defaultTo } from './defaultTo';\nexport { default as descend } from './descend';\nexport { default as difference } from './difference';\nexport { default as differenceWith } from './differenceWith';\nexport { default as dissoc } from './dissoc';\nexport { default as dissocPath } from './dissocPath';\nexport { default as divide } from './divide';\nexport { default as drop } from './drop';\nexport { default as dropLast } from './dropLast';\nexport { default as dropLastWhile } from './dropLastWhile';\nexport { default as dropRepeats } from './dropRepeats';\nexport { default as dropRepeatsWith } from './dropRepeatsWith';\nexport { default as dropWhile } from './dropWhile';\nexport { default as either } from './either';\nexport { default as empty } from './empty';\nexport { default as endsWith } from './endsWith';\nexport { default as eqBy } from './eqBy';\nexport { default as eqProps } from './eqProps';\nexport { default as equals } from './equals';\nexport { default as evolve } from './evolve';\nexport { default as filter } from './filter';\nexport { default as find } from './find';\nexport { default as findIndex } from './findIndex';\nexport { default as findLast } from './findLast';\nexport { default as findLastIndex } from './findLastIndex';\nexport { default as flatten } from './flatten';\nexport { default as flip } from './flip';\nexport { default as forEach } from './forEach';\nexport { default as forEachObjIndexed } from './forEachObjIndexed';\nexport { default as fromPairs } from './fromPairs';\nexport { default as groupBy } from './groupBy';\nexport { default as groupWith } from './groupWith';\nexport { default as gt } from './gt';\nexport { default as gte } from './gte';\nexport { default as has } from './has';\nexport { default as hasIn } from './hasIn';\nexport { default as head } from './head';\nexport { default as identical } from './identical';\nexport { default as identity } from './identity';\nexport { default as ifElse } from './ifElse';\nexport { default as inc } from './inc';\nexport { default as indexBy } from './indexBy';\nexport { default as indexOf } from './indexOf';\nexport { default as init } from './init';\nexport { default as innerJoin } from './innerJoin';\nexport { default as insert } from './insert';\nexport { default as insertAll } from './insertAll';\nexport { default as intersection } from './intersection';\nexport { default as intersperse } from './intersperse';\nexport { default as into } from './into';\nexport { default as invert } from './invert';\nexport { default as invertObj } from './invertObj';\nexport { default as invoker } from './invoker';\nexport { default as is } from './is';\nexport { default as isEmpty } from './isEmpty';\nexport { default as isNil } from './isNil';\nexport { default as join } from './join';\nexport { default as juxt } from './juxt';\nexport { default as keys } from './keys';\nexport { default as keysIn } from './keysIn';\nexport { default as last } from './last';\nexport { default as lastIndexOf } from './lastIndexOf';\nexport { default as length } from './length';\nexport { default as lens } from './lens';\nexport { default as lensIndex } from './lensIndex';\nexport { default as lensPath } from './lensPath';\nexport { default as lensProp } from './lensProp';\nexport { default as lift } from './lift';\nexport { default as liftN } from './liftN';\nexport { default as lt } from './lt';\nexport { default as lte } from './lte';\nexport { default as map } from './map';\nexport { default as mapAccum } from './mapAccum';\nexport { default as mapAccumRight } from './mapAccumRight';\nexport { default as mapObjIndexed } from './mapObjIndexed';\nexport { default as match } from './match';\nexport { default as mathMod } from './mathMod';\nexport { default as max } from './max';\nexport { default as maxBy } from './maxBy';\nexport { default as mean } from './mean';\nexport { default as median } from './median';\nexport { default as memoize } from './memoize';\nexport { default as memoizeWith } from './memoizeWith';\nexport { default as merge } from './merge';\nexport { default as mergeAll } from './mergeAll';\nexport { default as mergeDeepLeft } from './mergeDeepLeft';\nexport { default as mergeDeepRight } from './mergeDeepRight';\nexport { default as mergeDeepWith } from './mergeDeepWith';\nexport { default as mergeDeepWithKey } from './mergeDeepWithKey';\nexport { default as mergeWith } from './mergeWith';\nexport { default as mergeWithKey } from './mergeWithKey';\nexport { default as min } from './min';\nexport { default as minBy } from './minBy';\nexport { default as modulo } from './modulo';\nexport { default as multiply } from './multiply';\nexport { default as nAry } from './nAry';\nexport { default as negate } from './negate';\nexport { default as none } from './none';\nexport { default as not } from './not';\nexport { default as nth } from './nth';\nexport { default as nthArg } from './nthArg';\nexport { default as o } from './o';\nexport { default as objOf } from './objOf';\nexport { default as of } from './of';\nexport { default as omit } from './omit';\nexport { default as once } from './once';\nexport { default as or } from './or';\nexport { default as over } from './over';\nexport { default as pair } from './pair';\nexport { default as partial } from './partial';\nexport { default as partialRight } from './partialRight';\nexport { default as partition } from './partition';\nexport { default as path } from './path';\nexport { default as pathEq } from './pathEq';\nexport { default as pathOr } from './pathOr';\nexport { default as pathSatisfies } from './pathSatisfies';\nexport { default as pick } from './pick';\nexport { default as pickAll } from './pickAll';\nexport { default as pickBy } from './pickBy';\nexport { default as pipe } from './pipe';\nexport { default as pipeK } from './pipeK';\nexport { default as pipeP } from './pipeP';\nexport { default as pluck } from './pluck';\nexport { default as prepend } from './prepend';\nexport { default as product } from './product';\nexport { default as project } from './project';\nexport { default as prop } from './prop';\nexport { default as propEq } from './propEq';\nexport { default as propIs } from './propIs';\nexport { default as propOr } from './propOr';\nexport { default as propSatisfies } from './propSatisfies';\nexport { default as props } from './props';\nexport { default as range } from './range';\nexport { default as reduce } from './reduce';\nexport { default as reduceBy } from './reduceBy';\nexport { default as reduceRight } from './reduceRight';\nexport { default as reduceWhile } from './reduceWhile';\nexport { default as reduced } from './reduced';\nexport { default as reject } from './reject';\nexport { default as remove } from './remove';\nexport { default as repeat } from './repeat';\nexport { default as replace } from './replace';\nexport { default as reverse } from './reverse';\nexport { default as scan } from './scan';\nexport { default as sequence } from './sequence';\nexport { default as set } from './set';\nexport { default as slice } from './slice';\nexport { default as sort } from './sort';\nexport { default as sortBy } from './sortBy';\nexport { default as sortWith } from './sortWith';\nexport { default as split } from './split';\nexport { default as splitAt } from './splitAt';\nexport { default as splitEvery } from './splitEvery';\nexport { default as splitWhen } from './splitWhen';\nexport { default as startsWith } from './startsWith';\nexport { default as subtract } from './subtract';\nexport { default as sum } from './sum';\nexport { default as symmetricDifference } from './symmetricDifference';\nexport { default as symmetricDifferenceWith } from './symmetricDifferenceWith';\nexport { default as tail } from './tail';\nexport { default as take } from './take';\nexport { default as takeLast } from './takeLast';\nexport { default as takeLastWhile } from './takeLastWhile';\nexport { default as takeWhile } from './takeWhile';\nexport { default as tap } from './tap';\nexport { default as test } from './test';\nexport { default as times } from './times';\nexport { default as toLower } from './toLower';\nexport { default as toPairs } from './toPairs';\nexport { default as toPairsIn } from './toPairsIn';\nexport { default as toString } from './toString';\nexport { default as toUpper } from './toUpper';\nexport { default as transduce } from './transduce';\nexport { default as transpose } from './transpose';\nexport { default as traverse } from './traverse';\nexport { default as trim } from './trim';\nexport { default as tryCatch } from './tryCatch';\nexport { default as type } from './type';\nexport { default as unapply } from './unapply';\nexport { default as unary } from './unary';\nexport { default as uncurryN } from './uncurryN';\nexport { default as unfold } from './unfold';\nexport { default as union } from './union';\nexport { default as unionWith } from './unionWith';\nexport { default as uniq } from './uniq';\nexport { default as uniqBy } from './uniqBy';\nexport { default as uniqWith } from './uniqWith';\nexport { default as unless } from './unless';\nexport { default as unnest } from './unnest';\nexport { default as until } from './until';\nexport { default as update } from './update';\nexport { default as useWith } from './useWith';\nexport { default as values } from './values';\nexport { default as valuesIn } from './valuesIn';\nexport { default as view } from './view';\nexport { default as when } from './when';\nexport { default as where } from './where';\nexport { default as whereEq } from './whereEq';\nexport { default as without } from './without';\nexport { default as xprod } from './xprod';\nexport { default as zip } from './zip';\nexport { default as zipObj } from './zipObj';\nexport { default as zipWith } from './zipWith';","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof global.process === \"object\" && global.process.domain) {\n      invoke = global.process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g =\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this;\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = require('./_export');\n\n$export($export.P, 'Function', { bind: require('./_bind') });\n","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n"],"sourceRoot":""}